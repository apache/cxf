Apache CXF 3.4.3 Release Notes

1. Overview

The 3.4.x versions of Apache CXF is a significant new version of CXF
that provides several new features and enhancements.  

New features include: 
* New cxf-bom artifactId for importing all the CXF artifacts
* New support for Microprofile OpenAPI (as alternative to Swagger Core 2.0)
* New samples to show WS-Transaction usage, OpenAPI v3.0 with Microprofile
* Ability in Logging feature to mask sensitive information
* New support for SSEs in Microprofile Rest Client
* OAuth 2.0 Authorization Server Metadata / OpenID Provider Metadata

Important notes:
* Many dependencies have been upgraded to newer versions.  Check
  the migration guide.


Users are encouraged to review the migration guide at:
http://cxf.apache.org/docs/34-migration-guide.html
for further information and requirements for upgrading from earlier
versions of CXF.

3.4.3 fixes over 22 JIRA issues reported by users and the community.


2. Installation Prerequisites 

Before installing Apache CXF, make sure the following products,
with the specified versions, are installed on your system:

    * Java 8 Development Kit
    * Apache Maven 3.x to build the samples


3.  Integrating CXF Into Your Application

If you use Maven to build your application, you need merely add
appropriate dependencies. See the pom.xml files in the samples.

If you don't use Maven, you'll need to add one or more jars to your
classpath. The file lib/WHICH_JARS should help you decide which 
jars you need.

4. Building the Samples

Building the samples included in the binary distribution is easy. Change to
the samples directory and follow the build instructions in the README.txt file 
included with each sample.

5. Reporting Problems

If you have any problems or want to send feedback of any kind, please e-mail the
CXF dev list, dev@cxf.apache.org.  You can also file issues in JIRA at:

http://issues.apache.org/jira/browse/CXF

6. Migration notes:

See the migration guide at:
http://cxf.apache.org/docs/34-migration-guide.html
for caveats when upgrading.

7. Specific issues, features, and improvements fixed in this version

** Sub-task
    * [CXF-8394] - Fix org.apache.cxf.systest.jaxrs.JAXRSContinuationsServlet3Test.testCancelVoidOnResumedTest

** Bug
    * [CXF-7666] - Binary multipart payload are shown even if logBinary Flag is set to false
    * [CXF-8341] - LoggingFeature always prints out binary contents
    * [CXF-8361] - Support for Jakarta EE9 namespace in AnnotationHandlerChainBuilder
    * [CXF-8391] - Regex for addSensitiveElementNames is replace only the last element
    * [CXF-8401] - "tried to access protected method" exception after updating Java 14 to 15
    * [CXF-8402] - JwkUtils::fromECPublicKey returns key coordinates without leading zero
    * [CXF-8403] - stax2-api version conflict in cxf-rt-ws-security
    * [CXF-8415] - DefaultHostnameVerifier fails with HttpCore NIO
    * [CXF-8416] - Using fine-grained Import-Package for com.sun to avoid uncessary imported package
    * [CXF-8422] - Unclosed input streams after using org.apache.cxf.tools.wsdlto.WSDLToJava
    * [CXF-8427] - Response exception mappers not invoked on MP async methods
    * [CXF-8429] - Illegal reflective access in XercesSchemaValidationUtils
    * [CXF-8431] - NullPointerException in HTTPJettyTransportActivator
    * [CXF-8433] - JAXRSServerFactoryBean remove existing path from destinations on create

** Improvement
    * [CXF-8405] - add RequestLimitingHandler for http-undertow transport
    * [CXF-8411] - Improve FastInfoset interceptors' compatibility with GraalVM native compilation
    * [CXF-8412] - introduce EnableRecordRequestStartTime propery so that request process duration time can be logged for http-undertow transport
    * [CXF-8417] - upgrade to undertow 2.2.3
    * [CXF-8418] - be able to configure Undertow workerIOName from blueprint/OSGi
    * [CXF-8424] - Use template URL instead of actual path values for JAX-RS micrometer metrics

** Task
    * [CXF-8343] - Add JSON-B support

