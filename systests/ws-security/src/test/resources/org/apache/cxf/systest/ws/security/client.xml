<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements. See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership. The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License. You may obtain a copy of the License at
 
  http://www.apache.org/licenses/LICENSE-2.0
 
  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied. See the License for the
  specific language governing permissions and limitations
  under the License.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:jaxws="http://cxf.apache.org/jaxws"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd">
    <!-- 
         Client-side endpoint.  For this example, Alice is the client
         and Bob is the service.
    -->
    <jaxws:client name="{http://apache.org/hello_world_soap_http}TimestampSignEncryptPort" createdFromAPI="true">
        <jaxws:features>
            <bean class="org.apache.cxf.ext.logging.LoggingFeature"/>
        </jaxws:features>
        <jaxws:outInterceptors>
            <ref bean="TimestampSignEncrypt_Request"/>
        </jaxws:outInterceptors>
        <jaxws:inInterceptors>
            <ref bean="TimestampSignEncrypt_Response"/>
        </jaxws:inInterceptors>
    </jaxws:client>
    <!-- 
        This bean is an Out interceptor which will add a timestamp, 
        sign the timestamp and body, and then encrypt the timestamp 
        and body.  It uses 3DES as the symmetric key algorithm.
    -->
    <bean class="org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor" id="TimestampSignEncrypt_Request">
        <constructor-arg>
            <map>
                <entry key="action" value="Timestamp Signature Encrypt"/>
                <!-- <entry key="action" value="Timestamp Signature"/> -->
                <entry key="user" value="alice"/>
                <entry key="signaturePropFile" value="alice.properties"/>
                <entry key="encryptionPropFile" value="bob.properties"/>
                <entry key="encryptionUser" value="Bob"/>
                <entry key="signatureKeyIdentifier" value="DirectReference"/>
                <entry key="passwordCallbackClass" value="org.apache.cxf.systest.ws.common.KeystorePasswordCallback"/>
                <entry key="signatureParts" value="{Element}{http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd}Timestamp;{Element}{http://schemas.xmlsoap.org/soap/envelope/}Body"/>
                <!--    
                     Recommendation: signatures should be encrypted    
                -->
                <entry key="encryptionParts" value="{Element}{http://www.w3.org/2000/09/xmldsig#}Signature;{Content}{http://schemas.xmlsoap.org/soap/envelope/}Body"/>
                <!-- <entry key="encryptionKeyTransportAlgorithm" value="RSA15"/> -->
                <entry key="encryptionSymAlgorithm" value="http://www.w3.org/2001/04/xmlenc#tripledes-cbc"/>
            </map>
        </constructor-arg>
    </bean>
    <!--    
        This bean is an In interceptor which will validate a signed,    
         encrypted response, and timestamp it.    
    -->
    <bean class="org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor" id="TimestampSignEncrypt_Response">
        <constructor-arg>
            <map>
                <entry key="action" value="Timestamp Signature Encrypt"/>
                <entry key="signaturePropFile" value="bob.properties"/>
                <entry key="decryptionPropFile" value="alice.properties"/>
                <entry key="passwordCallbackClass" value="org.apache.cxf.systest.ws.common.KeystorePasswordCallback"/>
            </map>
        </constructor-arg>
    </bean>
</beans>