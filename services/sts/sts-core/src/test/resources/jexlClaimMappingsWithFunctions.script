/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

{
    // Role value mapping
    var roleClaimType = 'http://schemas.xmlsoap.org/ws/2005/05/identity/claims/role';
    var roleClaim = claims:get(sourceClaims, roleClaimType);
    var roleMappings = { "admin" : "administrator", "manager" : "manager" };
    var mappedRoles = claims:mapValues(roleClaim, roleMappings, false);
    
    // Claim merge
    var delimiter = ' ';
    var firstNameClaimType = 'http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname';
    var lastNameClaimType = 'http://schemas.xmlsoap.org/ws/2005/05/identity/claims/surname';
    var fullNameClaimType = 'http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name';
    var mergedClaim = claims:merge(sourceClaims, fullNameClaimType, delimiter, firstNameClaimType, lastNameClaimType);
    
    // Additional static claim
    var idpClaim = claims:create("http://schemas.microsoft.com/identity/claims/identityprovider",
            "https://idp.apache.org/cbb375d-33b-45fa-9bf5-f33bd8721a77/");

    // Claim value updates
    var uppercaseClaim = claims:create("http://my.schema.org/identity/claims/uppercase", "Value", "Value2");
    claims:upperCaseValues(uppercaseClaim);
    var lowercaseClaim = claims:create("http://my.schema.org/identity/claims/lowercase", "Value", "Value2");
    claims:lowerCaseValues(lowercaseClaim);
    var wrappedUppercaseClaim = claims:create("http://my.schema.org/identity/claims/wrappedUppercase", "Value");
    claims:wrapValues(wrappedUppercaseClaim, "Prefix_", "_Suffix");
    claims:upperCaseValues(wrappedUppercaseClaim);

    // Simple claim copy
    var emailClaimType = 'http://schemas.xmlsoap.org/ws/2005/05/identity/claims/mail';
    var emailClaim = claims:get(sourceClaims, emailClaimType);
    
    // Collect claims for new token
    claims:add(targetClaims, mappedRoles, mergedClaim, idpClaim);
    claims:add(targetClaims, uppercaseClaim, lowercaseClaim, wrappedUppercaseClaim, emailClaim);
    
    // Set correct issuer
    claims:updateIssuer(targetClaims, claimsParameters.stsProperties.issuer);
    
    // Return new claims
    return targetClaims;
}
